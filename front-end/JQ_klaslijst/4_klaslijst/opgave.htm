<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>

<head>
    <title></title>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js" type="text/javascript"></script>
    <script language="JavaScript">
        <!-- 

        $(document).ready(function() {

            jQuery.noConflict();
            (function($) {


                var options = $("#klasgroep");
                var optionsTwee = $("#leerlingen");
                var jqxhr = $.getJSON("klaslijst.js", function(data) {
                    console.log("success");
                    var jesonString = data;

                    $.each(data, function(key, val) {

                        options.append($("<option />").val(key).text(key));

                        //$.each(val,function(val, rij){console.log(rij)})


                    });


                    options.change(function() {
                       $("#leerlingen option").remove();
                        var selectedJeson = $("select option:selected").val();
                        console.log(selectedJeson);
                        $.each(jesonString[selectedJeson], function(x, y) {
                            optionsTwee.append($("<option />").val(y).text(y));
                         
                        optionsTwee.change(
                         function(){
                          $("h3").html(x);
                          $("h1").html(y);
                         }
                        )
                        });

                    })
                })





            })(jQuery)

            // haal het jsonobject op uit klaslijst.js en voer de callbackfunctie uit

            // de ontvangen data is onmiddelijk toegankelijk als object (json)
            // loop door het object: deze bestaat in eerste dimensie uit de klasgroepen

            // maak per klasgroep een option aan in de eerste select


            // koppel een change-event-listener aan de select:
            // wanneer de waarde van de select verandert, voer dan de functie selectGroep uit.
            // trigger een change event om de functie al eens uit te voeren
            // (trigger doet alsof de select veranderd is, zonder dat dat het geval is)



            // wordt uitgevoerd als de eerste select verandert (of zo'n trigger krijgt)

            // vraag de huidige waarde van de select op (klasgroep)

            // maak de tweede select leeg

            // loop door het klasgroepobject (tweede dimensie van het json-object)

            // maak een option aan
            // geef de option de juiste value (de key leerling), value is een attribuut van de option
            // en vul de juiste tekst in (opvragen met behulp van de key leerling)

            // voeg de net aangemaakte option toe aan de tweede select


            // koppel een change-event-listener aan de select (de functie selectLeerling)
            // en trigger direct een eerste change om de functie uit te voeren


            // wordt uitgevoerd als de tweede select verandert (of zo'n trigger krijgt)

            // vraag de huidige waarde van de select op (leerlingId)

            // vraag de tekst van de geselecteerde option op (leerlingnaam)

            // zoek de H1, geef als tekst de naam van de leerling mee
            // zoek het volgende element (de H3), geef als tekst het leerlingID mee


        });


        //-->
    </script>

</head>

<body>

    <select id="klasgroep">hhh</select>
    <select id="leerlingen"></select>

    <h1></h1>
    <h3></h3>

</body>

</html>